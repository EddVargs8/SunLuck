"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Board */ \"./pages/Board.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _thirdweb_dev_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @thirdweb-dev/react */ \"./node_modules/@thirdweb-dev/react/dist/thirdweb-dev-react.browser.esm.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst SOLANA_NETWORK = \"devnet\";\nconst Home = ()=>{\n    _s();\n    const [publicKey, setPublicKey] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const [balance, setBalance] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const [receiver, setReceiver] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [amount, setAmount] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [explorerLink, setExplorerLink] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [uploadUrl, setUploadUrl] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [url, setUrl] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [statusText, setStatusText] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        let key = window.localStorage.getItem(\"publicKey\"); //obtiene la publicKey del localStorage\n        setPublicKey(key);\n        if (key) getBalances(key);\n        if (explorerLink) setExplorerLink(null);\n    }, []);\n    const handleReceiverChange = (event)=>{\n        setReceiver(event.target.value);\n    };\n    const handleAmountChange = (event)=>{\n        setAmount(event.target.value);\n    };\n    const handleSubmit = async ()=>{\n        console.log(\"Este es el receptor\", receiver);\n        console.log(\"Este es el monto\", amount);\n        sendTransaction();\n    };\n    const handleUrlChange = (event)=>{\n        setUrl(event.target.value);\n        console.log(\"Si se esta seteando la URL\", url);\n    };\n    //Funcion para Iniciar sesion con nuestra Wallet de Phantom\n    const signIn = async ()=>{\n        var _window_phantom, _window;\n        //Si phantom no esta instalado\n        const provider = (_window = window) === null || _window === void 0 ? void 0 : (_window_phantom = _window.phantom) === null || _window_phantom === void 0 ? void 0 : _window_phantom.solana;\n        const { solana } = window;\n        if (!(provider === null || provider === void 0 ? void 0 : provider.isPhantom) || !solana.isPhantom) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Phantom no esta instalado\");\n            setTimeout(()=>{\n                window.open(\"https://phantom.app/\", \"_blank\");\n            }, 2000);\n            return;\n        }\n        //Si phantom esta instalado\n        let phantom;\n        if (provider === null || provider === void 0 ? void 0 : provider.isPhantom) phantom = provider;\n        const { publicKey } = await phantom.connect(); //conecta a phantom\n        console.log(\"publicKey\", publicKey.toString()); //muestra la publicKey\n        setPublicKey(publicKey.toString()); //guarda la publicKey en el state\n        window.localStorage.setItem(\"publicKey\", publicKey.toString()); //guarda la publicKey en el localStorage\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Tu Wallet esta conectada \\uD83D\\uDC7B\");\n        getBalances(publicKey);\n    };\n    //Funcion para cerrar sesion con nuestra Wallet de Phantom\n    const signOut = async ()=>{\n        if (window) {\n            var _window_location, _window;\n            const { solana } = window;\n            window.localStorage.removeItem(\"publicKey\");\n            setPublicKey(null);\n            solana.disconnect();\n            router.reload((_window = window) === null || _window === void 0 ? void 0 : (_window_location = _window.location) === null || _window_location === void 0 ? void 0 : _window_location.pathname);\n        }\n    };\n    //Funcion para obtener el balance de nuestra wallet\n    const getBalances = async (publicKey)=>{\n        try {\n            const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.Connection((0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.clusterApiUrl)(SOLANA_NETWORK), \"confirmed\");\n            const balance = await connection.getBalance(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.PublicKey(publicKey));\n            const balancenew = balance / _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.LAMPORTS_PER_SOL;\n            setBalance(balancenew);\n        } catch (error) {\n            console.error(\"ERROR GET BALANCE\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Something went wrong getting the balance\");\n        }\n    };\n    //Funcion para enviar una transaccion\n    const sendTransaction = async ()=>{\n        try {\n            var _window_phantom, _window;\n            //Consultar el balance de la wallet\n            getBalances(publicKey);\n            console.log(\"Este es el balance\", balance);\n            //Si el balance es menor al monto a enviar\n            if (balance < amount) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"No tienes suficiente balance\");\n                return;\n            }\n            const provider = (_window = window) === null || _window === void 0 ? void 0 : (_window_phantom = _window.phantom) === null || _window_phantom === void 0 ? void 0 : _window_phantom.solana;\n            const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.Connection((0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.clusterApiUrl)(SOLANA_NETWORK), \"confirmed\");\n            //Llaves\n            const fromPubkey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.PublicKey(publicKey);\n            const toPubkey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.PublicKey(receiver);\n            //Creamos la transaccion\n            const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.Transaction().add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.SystemProgram.transfer({\n                fromPubkey,\n                toPubkey,\n                lamports: amount * _solana_web3_js__WEBPACK_IMPORTED_MODULE_5__.LAMPORTS_PER_SOL\n            }));\n            console.log(\"Esta es la transaccion\", transaction);\n            //Traemos el ultimo blocke de hash\n            const { blockhash } = await connection.getLatestBlockhash();\n            transaction.recentBlockhash = blockhash;\n            transaction.feePayer = fromPubkey;\n            //Firmamos la transaccion\n            const transactionsignature = await provider.signTransaction(transaction);\n            //Enviamos la transaccion\n            const txid = await connection.sendRawTransaction(transactionsignature.serialize());\n            console.info(\"Transaccion con numero de id \".concat(txid, \" enviada\"));\n            //Esperamos a que se confirme la transaccion\n            const confirmation = await connection.confirmTransaction(txid, {\n                commitment: \"singleGossip\"\n            });\n            const { slot } = confirmation.value;\n            console.info(\"Transaccion con numero de id \".concat(txid, \" confirmado en el bloque \").concat(slot));\n            const solanaExplorerLink = \"https://explorer.solana.com/tx/\".concat(txid, \"?cluster=\").concat(SOLANA_NETWORK);\n            setExplorerLink(solanaExplorerLink);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Transaccion enviada con exito :D \");\n            //Actualizamos el balance\n            getBalances(publicKey);\n            setAmount(null);\n            setReceiver(null);\n            return solanaExplorerLink;\n        } catch (error) {\n            console.error(\"ERROR SEND TRANSACTION\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al enviar la transaccion\");\n        }\n    };\n    //Función para subir archivos a IPFS\n    const { mutateAsync: upload } = (0,_thirdweb_dev_react__WEBPACK_IMPORTED_MODULE_6__.useStorageUpload)();\n    const uploadToIpfs = async (file)=>{\n        setStatusText(\"Subiendo a IPFS...\");\n        const uploadUrl = await upload({\n            data: [\n                file\n            ],\n            options: {\n                uploadWithGatewayUrl: true,\n                uploadWithoutDirectory: true\n            }\n        });\n        return uploadUrl[0];\n    };\n    // URL a Blob\n    const urlToBLob = async (file)=>{\n        setStatusText(\"Transformando url...\");\n        await fetch(url).then((res)=>res.blob()).then((myBlob)=>{\n            // logs: Blob { size: 1024, type: \"image/jpeg\" }\n            myBlob.name = \"blob.png\";\n            file = new File([\n                myBlob\n            ], \"image.png\", {\n                type: myBlob.type\n            });\n        });\n        const uploadUrl = await uploadToIpfs(file);\n        console.log(\"uploadUrl\", uploadUrl);\n        setStatusText(\"La url de tu archivo es: \".concat(uploadUrl, \" \"));\n        setUploadUrl(uploadUrl);\n        return uploadUrl;\n    };\n    //Funcion para crear un NFT\n    const generateNFT = async ()=>{\n        try {\n            setStatusText(\"Creando tu NFT...❤\");\n            const mintedData = {\n                name: \"Mi primer NFT con Superteam MX\",\n                imageUrl: uploadUrl,\n                publicKey\n            };\n            console.log(\"Este es el objeto mintedData:\", mintedData);\n            setStatusText(\"Minteando tu NFT en la blockchain Solana \\uD83D\\uDE80 Porfavor espera...\");\n            const { data } = await axios__WEBPACK_IMPORTED_MODULE_7__[\"default\"].post(\"/api/mintnft\", mintedData);\n            const { signature: newSignature } = data;\n            const solanaExplorerUrl = \"https://solscan.io/tx/\".concat(newSignature, \"?cluster=\").concat(SOLANA_NETWORK);\n            console.log(\"solanaExplorerUrl\", solanaExplorerUrl);\n            setStatusText(\"\\xa1Listo! Tu NFT se a creado, revisa tu Phantom Wallet \\uD83D\\uDD96\");\n        } catch (error) {\n            console.error(\"ERROR GENERATE NFT\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al generar el NFT\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        type: \"submit\",\n        className: \"inline-flex h-8 w-52 justify-center bg-purple-500 font-bold text-white\",\n        onClick: ()=>{\n            signIn();\n        },\n        children: \"Iniciar Sesion ⚡\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Alex\\\\Downloads\\\\HACKTON\\\\ForkProject1-main\\\\pages\\\\index.js\",\n        lineNumber: 264,\n        columnNumber: 9\n    }, undefined);\n};\n_s(Home, \"2Vu16+VfaL1AoCfYtfnhxvMz29Y=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter,\n        _thirdweb_dev_react__WEBPACK_IMPORTED_MODULE_6__.useStorageUpload\n    ];\n});\n_c = Home;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Home);\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n"));

/***/ })

});